service: ramen-backend

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    NODE_ENV: ${self:provider.stage}
    SUPABASE_URL: ${env:SUPABASE_URL}
    SUPABASE_SERVICE_ROLE_KEY: ${env:SUPABASE_SERVICE_ROLE_KEY}
    STRIPE_SECRET_KEY: ${env:STRIPE_SECRET_KEY}
    CORS_ORIGIN: ${env:CORS_ORIGIN, '*'}
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: '*'

functions:
  api:
    handler: dist/index.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Requested-With
            allowCredentials: false
      - http:
          path: /
          method: ANY
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Requested-With
            allowCredentials: false

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3001
    host: 0.0.0.0

package:
  exclude:
    - src/**
    - node_modules/**
    - .git/**
    - .gitignore
    - README.md
    - package-lock.json
    - yarn.lock
  include:
    - dist/**
    - node_modules/**